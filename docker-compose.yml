# docker composerのバージョンの指定
version: "3.9"

services:
  node:
    # buildするdockerfileの位置
    build: ./front
    # 作成するdockerコンテナの名前
    container_name: node
    # docker内と共有するフォルダの指定
    volumes:
      - ./front/React:/front
    # docker内に入った時の初期パスの指定
    working_dir: /front
    # コンテナにバインドするポートの指定（左:自分のPCポート、右:dookerコンテナのポート）
    ports:
      - "3000:3000"
    expose:
      - "3000"
    links:
      - flask
    # コンテナが勝手に終了しないための設定
    tty: true
    # 標準入出力とエラー出力をコンテナに結びつける設定
    stdin_open: true
    # ホットリロードを行う設定
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      my_network:
        ipv4_address: 192.168.0.101

  flask:
    container_name: flask
    depends_on:
      - db
    build:
      context: .
      dockerfile: ./backend/flask_app/Dockerfile
    ports:
      - "5000:5000"
    expose:
      - "5000"
    volumes:
      - ./backend/flask_app/scripts:/var/www/scripts:cached
      - ./backend/flask_app/app:/var/www
      - ./gunicorn_socket:/tmp/gunicorn_socket/gunicorn_flask.sock
    working_dir: /var/www/scripts
    command: bash -c "./run.sh"
    networks:
      my_network:
        ipv4_address: 192.168.0.102
    environment:
      TZ: "Asia/Tokyo"
    env_file:
      - .env.dev
      
  db:
    container_name: mysql_db
    build:
      context: .
      dockerfile: ./backend/DB/Dockerfile
    restart: always
    tty: true
    expose:
      - "3306"
    volumes:
      - ./backend/DB/docker-entrypoint:/docker-entrypoint-initdb.d
      - ./log/db:/var/log/mysql:cached
    networks:
      my_network:
        ipv4_address: 192.168.0.103
    environment:
      TZ: "Asia/Tokyo"
    env_file:
      - .env.dev

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    env_file:
      - .env.dev
    links:
      - db
    ports:
      - "4000:80"
    volumes:
      - ./phpmyadmin/sessions:/sessions
    networks:
      my_network:
        ipv4_address: 192.168.0.104

  web:
    container_name: NginX
    image: nginx:latest
    command: nginx -g "daemon off;"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./front/React/build:/usr/share/nginx/html
      - ../ssl/certs/:/etc/pki/tls/certs/
      - ../ssl/private/:/etc/pki/tls/private/
      - ./gunicorn_socket:/tmp/gunicorn_socket/gunicorn_flask.sock
    links:
      - flask
    restart: always
    networks:
      my_network:
        ipv4_address: 192.168.0.105

volumes:
  socket:

networks:
  my_network:
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: 192.168.0.0/24